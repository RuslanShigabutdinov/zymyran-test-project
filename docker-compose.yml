services:
  # PHP Application
  app:
    image: zymyran-app
    build:
      context: .
      dockerfile: Dockerfile
    container_name: dockerized-laravel-app
    restart: unless-stopped
    volumes:
      - ./:/var/www/html
      - ./docker/php/local.ini:/usr/local/etc/php/conf.d/local.ini
    networks:
      - dockerized-laravel-network
    depends_on:
      - db
    environment:
      - DB_HOST=db
      - DB_DATABASE=${DB_DATABASE}
      - DB_USERNAME=${DB_USERNAME}
      - DB_PASSWORD=${DB_PASSWORD}

  task:
    image: zymyran-app
    container_name: dockerized-laravel-scheduler
    working_dir: /var/www/html
    command: php artisan schedule:work
    restart: unless-stopped
    volumes:
      - ./:/var/www/html
      - ./docker/php/local.ini:/usr/local/etc/php/conf.d/local.ini
    environment:
      - DB_HOST=db
      - DB_DATABASE=${DB_DATABASE}
      - DB_USERNAME=${DB_USERNAME}
      - DB_PASSWORD=${DB_PASSWORD}
      - QUEUE_CONNECTION=redis
      - CACHE_DRIVER=redis
      - SESSION_DRIVER=redis
      - REDIS_HOST=redis
      - APP_ENV=${APP_ENV:-local}
    depends_on:
      - app
      - db
      - redis
    networks:
      - dockerized-laravel-network

  # Nginx Web Server
  webserver:
    image: nginx:alpine
    container_name: dockerized-laravel-webserver
    restart: unless-stopped
    ports:
      - "8080:8080"
    volumes:
      - ./:/var/www/html
      - ./docker/nginx/default.conf:/etc/nginx/conf.d/default.conf
    networks:
      - dockerized-laravel-network
    depends_on:
      - app

  # PostgreSQL Database
  db:
    image: postgres:17
    container_name: dockerized-laravel-db
    restart: unless-stopped
    environment:
      - POSTGRES_DB=${DB_DATABASE}
      - POSTGRES_USER=${DB_USERNAME}
      - POSTGRES_PASSWORD=${DB_PASSWORD}
    volumes:
      - dockerized-laravel-data:/var/lib/postgresql/data
    networks:
      - dockerized-laravel-network
    ports:
      - "5432:5432"

  # Redis for Cache and Queue
  redis:
    image: redis:alpine
    container_name: dockerized-laravel-redis
    restart: unless-stopped
    networks:
      - dockerized-laravel-network
    ports:
      - "6379:6379"

  # pgAdmin (Web UI for PostgreSQL)
  pgadmin:
    image: dpage/pgadmin4
    container_name: dockerized-laravel-pgadmin
    restart: unless-stopped
    environment:
      - PGADMIN_DEFAULT_EMAIL=admin@admin.com
      - PGADMIN_DEFAULT_PASSWORD=root
    ports:
      - "5050:80"
    networks:
      - dockerized-laravel-network
    depends_on:
      - db

# Networks
networks:
  dockerized-laravel-network:
    driver: bridge

# Volumes
volumes:
  dockerized-laravel-data:
    driver: local
